# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: CI/CD Pipeline for animal_news

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    env:
      MYSQL_HOST: ${{ secrets.MYSQL_HOST }}
      MYSQL_PORT: ${{ secrets.MYSQL_PORT }}
      MYSQL_DB: ${{ secrets.MYSQL_DB }}
      MYSQL_USERNAME: ${{ secrets.MYSQL_USERNAME }}
      MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
      
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 21
      uses: oracle-actions/setup-java@v1
      with:
        website: oracle.com
        release: 21
        version: latest
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file ./animal_news_backend/pom.xml
    - name: Build with Docker
      run: docker compose build
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Push to DockerHub
      run: docker compose push
  
  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
        - name: Deploy to VPS using SSH
          uses: appleboy/ssh-action@master
          with:
            host: ${{ secrets.SSH_HOST }}
            username: ${{ secrets.SSH_USERNAME }}
            password: ${{ secrets.SSH_PASSWORD }}
            port: ${{ secrets.SSH_PORT }}
            script: |
              test -d animal_news && clone https://github.com/ZNhatAnhZ/animal_news.git
              cd animal_news
              git pull origin main
              docker compose pull && docker compose up -d
